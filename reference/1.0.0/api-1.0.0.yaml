#-------------------------------------
# Initial Version
# Update in all the APIs header and payload.
# Added Fiserv TRID in response payload.
# Added X-Card-Brand in request header to TSP
# Added Queue API specification.
# Added Rupay specific attributes in tokenization and cryptogram payload.
#-------------------------------------
openapi: 3.0.0
info:
  version: 0.0.3
  title: Networks Tokenization APIs
  description: This Specification document lists the APIs required for provision a token for a PAN, getting Cryptogram for a token and Lifecycle management for the provisioned token.

servers:
  - url:  https://mtrg-cloud-gateway-qa.apps.us-oma1-np2.1dc.com/
  - url:  https://mtrg-cloud-gateway-qa.apps.us-chd1-np2.1dc.com/
  - url:  https://mtrg-cloud-gateway-cat.apps.us-oma1-ip01.1dc.com/
  - url:  https://mtrg-cloud-gateway-cat.apps.us-chd1-ip01.1dc.com/
  - url:  https://mtrg-cloud-gateway.apps.us-oma1-ip01.1dc.com/
  - url:  https://mtrg-cloud-gateway.apps.us-chd1-ip01.1dc.com/

paths:
  /mtrg/v1/trids/{id}/queue-tokens:
    post:
      tags:
        - Asynch Token
      description: This API is to queue a provision token request for a PAN. It's asynch way of tokenization with issuer through different networks like VISA, MASTERCARD, DISCOVER, AMEX.
      parameters:
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions.
          required: true
          schema:
            type: string
        - in: header
          name: X-Card-Brand
          description: A reference value provided to TSP to determine TSP. Value should be VI, AX, DI, MC
          required: true
          schema:
            $ref: '#/components/schemas/CardBrand'
        - in: path
          name: id
          description: Unique TRID Id generated by Fiserv for merchant. The value should be unique per merchant.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for provision a PAN data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionTokenRequest'
      responses:
        '201':
          description: provision response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionQueueResponse'
        '400':
          description: provision response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: provision response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: provision response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /mtrg/v1/trids/{id}/network-tokens:
    post:
      tags:
        - Provision Token
      description: This API is to tokenize/provision a PAN data with issuer through different network engines like VISA, MASTERCARD, DISCOVER, AMEX.
      parameters:
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions.
          required: true
          schema:
            type: string
        - in: header
          name: X-Card-Brand
          description: A reference value provided to TSP to determine TSP. Value should be VI, AX, DI, MC
          required: true
          schema:
            $ref: '#/components/schemas/CardBrand'
        - in: path
          name: id
          description: Unique TRID Id generated by Fiserv for merchant. The value should be unique per merchant.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for provision a PAN data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionTokenRequest'
      responses:
        '201':
          description: provision response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionTokenResponse'
        '400':
          description: provision response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: provision response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: provision response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /mtrg/v1/trids/{id}/network-tokens/{tokenReferenceId}:
    patch:
      tags:
        - Token Lifecycle
      description: This API is to temporarily chnage the status of the token -  ACTIVE, SUSPEND, UNSUSPEND, DELETE are the lifecycle status.
      parameters:
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions.
          required: true
          schema:
            type: string
        - in: header
          name: X-Card-Brand
          description: A reference value provided to TSP to determine TSP. Value should be VI, AX, DI, MC
          required: true
          schema:
            $ref: '#/components/schemas/CardBrand'
        - in: path
          name: tokenReferenceId
          description: The specific Token to be queried.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: Unique TRID Id generated by Fiserv for merchant. The value should be unique per merchant.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for provision a PAN data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokenRequest'
      responses:
        '204':
          description: provision response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
        '400':
          description: provision response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: provision response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: provision response - not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: provision response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /mtrg/v1/trids/{id}/network-tokens/{tokenReferenceId}/cryptogram:
    post:
      tags:
        - Cryptogram
      description: This API is to create a Digital Secure Remote Payment transaction cryptogram using the credentials stored within netwrok to perfoem transaction.
      parameters:
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions.
          required: true
          schema:
            type: string
        - in: header
          name: X-Card-Brand
          description: A reference value provided to TSP to determine TSP. Value should be VI, AX, DI, MC
          required: true
          schema:
            $ref: '#/components/schemas/CardBrand'
        - in: path
          name: tokenReferenceId
          description: The tokenReferenceId provided by MTRG in respsone of /provision-tokens API.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: Unique TRID Id generated by Fiserv for merchant. The value should be unique per merchant.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for provision a PAN data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CryptoGramRequest'
      responses:
        '201':
          description: provision response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoGramResponse'
        '400':
          description: provision response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: provision response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: provision response - not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: provision response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ##-------------------------------------
    ## Response Model
    ##-------------------------------------
    CryptoGramRequest:
      title: Create CryptoGram request object model.
      type: object
      required:
        - tspId
        - transactionType
      properties:
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        cardBrand:
          $ref: '#/components/schemas/CardBrand'
        merchantInfo:
          $ref: '#/components/schemas/MerchantInfo'
        customerInfo:
          $ref: '#/components/schemas/CustomerInfo'

    CryptoGramResponse:
      title: Create CryptoGram resposne object model.
      type: object
      required:
        - token
        - crypto
      properties:
        token:
          $ref: '#/components/schemas/Token'
        crypto:
          $ref: '#/components/schemas/CryptoGram'

    ProvisionTokenRequest:
      title: Provision request object model
      type: object
      required:
        - provision
      properties:
        provision:
          $ref: '#/components/schemas/Provision'
        cardBrand:
          $ref: '#/components/schemas/CardBrand'

    ProvisionTokenResponse:
      title: Provision resposne object model
      type: object
      required:
        - provision
      properties:
        provision:
          $ref: '#/components/schemas/Provision'
        crypto:
          $ref: '#/components/schemas/CryptoGram'
        cardBrand:
          $ref: '#/components/schemas/CardBrand'

    UpdateTokenRequest:
      title: Provision request object model
      type: object
      required:
        - operation
        - updateReason
        - tspId
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
        updateReason:
          $ref: '#/components/schemas/UpdateReason'
        cardBrand:
          $ref: '#/components/schemas/CardBrand'

    ProvisionQueueResponse:
      title: Provision resposne object model
      type: object
      required:
        - provision
      properties:
        clientRequestId:
          description: Request Id provided at the time of API call in the header - Client-Request-Id.
          type: string
          example: "2021-09-28T09:07:44.716+00:00"
        provisionRequestId:
          description: Corellation Id generated by the platform after adding request to the queue.
          type: string
          example: "2021-09-28T09:07:44.716+00:00"
        cardBrand:
          $ref: '#/components/schemas/CardBrand'
        createdDate:
          description: Time in when the request was added into the queue.
          type: string
          example: "2021-09-28T09:07:44.716+00:00"

    ##-------------------------------------
    ## Object Model
    ##-------------------------------------
    Provision:
      description: Provision card information.
      type: object
      required:
        - card
        - cryptoRequired
      properties:
        card:
          $ref: '#/components/schemas/Card'
        panSource:
          $ref: '#/components/schemas/PanSource'
        tokenInfo:
          $ref: '#/components/schemas/TokenInfo'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        cryptogramRequired:
          description: If the flag is true then platform will first tokenize the card and then generate the Cryptogramm also for that token. Platform will make two API calls to networks. Once for Tokenization and other for Crptogram.
          type: boolean
          example: false
          writeOnly: true
        merchantInfo:
          $ref: '#/components/schemas/MerchantInfo'
        customerInfo:
          $ref: '#/components/schemas/CustomerInfo'
        authorizationInfo:
          $ref: '#/components/schemas/AuthorizationInfo'

    MerchantInfo:
      description: Information about merchant - Required only for Rupay.
      type: object
      writeOnly: true
      required:
        - merchantId
        - merchantName
      properties:
        merchantId:
          description: Unique Id provided by frontend(north/south/memphis/oma) for a merchant at the time of boarding .
          type: string
          example: "54234509"
          maximum: 36
        merchantName:
          description: Name provided by the merchant at the time of boarding - Doing Business As.
          type: string
          example: "Microsoft LLC."
          maximum: 45

    CustomerInfo:
      description: Information about customer - Required Only for Rupay.
      type: object
      writeOnly: true
      required:
        - consumerId
      properties:
        consumerId:
          description: Unique profile Id associated with each customer.
          type: string
          example: "2d8a1360a24841e1a5677"
          maximum: 64

    AuthorizationInfo:
      description: Information about Auth transaction - Required Only for Rupay.
      type: object
      writeOnly: true
      required:
        - authRefNo
      properties:
        authRefNo:
          description: Unique Auth Id for the transaction created before tokenization.
          type: string
          example: "2d8a1360a24841e1a5677"
          maximum: 36

    Card:
      description: Information on a credit account
      type: object
      required:
        - cardNumber
        - cardType
        - expiryDate
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "4111111111111111"
          writeOnly: true
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "4567"
        cardBrandLogoAssetId:
          description: Asset associated with Card.
          type: string
          example: "SOME_RANDOM_ID"
          readOnly: true
        cardBrandDescription:
          description: A short description for this product. Always returned in Product Configuration object.
          type: string
          example: "SHORT_DESCRIPTION"
          readOnly: true
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'

    CryptoGram:
      description: Cryptogram resposne to merchant.
      type: object
      required:
        - cryptogram
        - eci
      properties:
        cryptogram:
          description: The unique cryptogram valid only for a specific transaction.
          type: string
          readOnly: true
          example: "5001a9f027e5629d11e3949a0800a"
        eci:
          description: EC indicator for liability shift.
          type: string
          readOnly: true
          example: "12345"

    ExpiryDate:
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
      type: object
      required:
        - month
        - year
      properties:
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "09"
        year:
          type: string
          description: Year format 'YY'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "20"

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string

    TokenInfo:
      description: Information related to network Tokens and reference Ids.
      type: object
      readOnly: true
      required:
        - token
      properties:
        decision:
          $ref: '#/components/schemas/TokenStatus'
        token:
          $ref: '#/components/schemas/Token'

    Token:
      description: Information related to network Tokens
      type: object
      readOnly: true
      properties:
        tokenReferenceId:
          description: A unique reference assigned following the allocation of a token used to identify the token for the duration of its lifetime.
          type: string
          example: "5001a9f027e5629d11e3949a0800a"
          readOnly: true
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        alias:
          description: Last four values of the token
          type: string
          example: "1111"
          readOnly: true
        paymentAccountReferenceId:
          description: The unique account reference assigned to the PAN. Conditionally returned if the Token Requestor has opted to receive PAR and providing PAR is assigned by netwroks or the Issuer provides PAR in the authorization message response.
          type: string
          readOnly: true
          example: "5001a9f027e5629d11e3949a0800a"
        tokenRequestorId:
          description: Unique ID that identifies the entity for which the token request is being conducted.
          type: string
          maximum: 11
          readOnly: true
          example: "2901"
        fiservTokenRequestorId:
          description: Unique ID mapes to tokenRequestorId. Unique per merchant.
          type: string
          maximum: 11
          readOnly: true
          example: "MSTF-2901"
        paymentToken:
          description: The Token for a PAN. This should be used for auth.
          type: string
          readOnly: true
          example: "5001a9f027e5629d11e3949a0800a"
        pushAccountReceipt:
          description: This attribute is used only in case of push provisioning used case. The value of the attribute should be provided in case of PAN details.
          type: string
          readOnly: true
          example: "6001a9f027e5629d11e3949a0800a"
        provisionTokenId:
          description: This will be returned only for VISA tokenization.
          type: string
          readOnly: true
          example: "6001a9f027e5629d11e3949a0800a"

    UpdateReason:
      description: Information related to network Tokens
      type: object
      required:
        - causedBy
        - reasonCode
      properties:
        causedBy:
          $ref: '#/components/schemas/CausedBy'
        reasonCode:
          $ref: '#/components/schemas/ReasonCode'
        reason:
          description: Free form reason why the Tokens are being suspended.
          type: string
          example: "Lost/stolen device"
          writeOnly: true

    #-------------------------------------
    # Common Models
    #-------------------------------------
    Error:
      description: Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        code: "40000"
        message: "Example Error"
        category: "example"
        developerInfo:
          developerMessage: "Invalid Message format in request payload"
          moreInfo: "https://www.example.com/errors/40000"
          fieldError:
            - field: "example id"
              message: "exampleId is mandatory"

    #-------------------------------------
    # ENUM Models
    #-------------------------------------
    TokenStatus:
      description: Indicates the status of an token.
      type: string
      readOnly: true
      enum:
        - ACTIVE
        - INACTIVE
        - SUSPENDED
        - DEACTIVATED
        - DECLINED
        - APPROVED

    Operation:
      description: Indicates the type of operation to be performed. Applicable values are defined belo.
      type: string
      writeOnly: true
      enum:
        - SUSPEND
        - RESUME
        - DELETE
        - REISSUE
        - UPDATE

    CardBrand:
      description: A reference id provided to merchant in the response. This is to identtify source of tokenReferenceId. probabile values are define as enum.
      type: string
      enum:
        - VI
        - AX
        - DI
        - MC
        - RU

    CausedBy:
      description: Who or what caused the Token to be suspended. Must be either the 'CARDHOLDER' (operation requested by the Cardholder) or 'TOKEN_REQUESTOR' (operation requested by the token requestor).
      type: string
      enum:
        - CARDHOLDER
        - TOKEN_REQUESTOR

    ReasonCode:
      description: The reason for the action to be suspended. Must be one of 'SUSPECTED_FRAUD' (suspected fraudulent token transactions), 'OTHER' (Other - default used if value not provided).
      type: string
      enum:
        - FRAUD
        - CUSTOMER_CONFIRMED
        - OTHER

    TransactionType:
      description: ECOM-e-commercetransactiontype.Tobe used with web flows.RECURRING-Recurringpayment. If not provided in request, default value will be ECOM
      type: string
      writeOnly: true
      enum:
        - ECOM
        - RECURRING

    PanSource:
      description: Source of the payment instrument (PAN). This enum value specifies the source and the method used to provide the payment instrument data. If not provided in request, default value will be CARD_ON_FILE
      type: string
      writeOnly: true
      enum:
        - CARD_ON_FILE
        - CARD_ADDED_MANUALLY
        - ISSUER_PUSH_PROVISION
        - TOKEN_FOR_TOKEN
        - CARD_ADDED_VIA_APPLICATION
        - BATCH
    #-------------------------------------
    # response Models
    #-------------------------------------
    NoContent:
      description: The request succeeded but there’s really nothing to show.


    Unauthorized:
      description: Unauthorized
